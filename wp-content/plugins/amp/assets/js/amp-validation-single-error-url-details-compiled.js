!function(t){var n={};function c(d){if(n[d])return n[d].exports;var l=n[d]={i:d,l:!1,exports:{}};return t[d].call(l.exports,l,l.exports,c),l.l=!0,l.exports}c.m=t,c.c=n,c.d=function(t,n,d){c.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:d})},c.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},c.t=function(t,n){if(1&n&&(t=c(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var d=Object.create(null);if(c.r(d),Object.defineProperty(d,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var l in t)c.d(d,l,function(n){return t[n]}.bind(null,l));return d},c.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return c.d(n,"a",n),n},c.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},c.p="",c(c.s=6)}({6:function(module,exports){eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Toggles the contents of a details element as an additional table tr.\n */\nvar RowToggler = function () {\n\tfunction RowToggler(tr, index) {\n\t\t_classCallCheck(this, RowToggler);\n\n\t\tthis.tr = tr;\n\t\tthis.index = index;\n\n\t\t// Since we're adding additional rows, we need to override default .striped tables styles.\n\t\tthis.tr.classList.add(this.index % 2 ? 'odd' : 'even'); // eslint-disable-line no-magic-numbers\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t}\n\n\t/**\n  * Sets up the new tr and adds an event listener to toggle details.\n  */\n\n\n\t_createClass(RowToggler, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar _this = this;\n\n\t\t\tthis.details = this.tr.querySelector('.column-details details');\n\t\t\tif (this.details) {\n\t\t\t\tthis.createNewTr();\n\t\t\t\tvar togglers = [].concat(_toConsumableArray(this.tr.querySelectorAll('.single-url-detail-toggle')), [this.details.querySelector('summary')]);\n\n\t\t\t\ttogglers.forEach(function (el) {\n\t\t\t\t\tel.addEventListener('click', function () {\n\t\t\t\t\t\t_this.toggle(el);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Creates the details table row from the original row's <details> element content, minus the summary.\n   */\n\n\t}, {\n\t\tkey: 'createNewTr',\n\t\tvalue: function createNewTr() {\n\t\t\tthis.newTr = document.createElement('tr');\n\t\t\tthis.newTr.classList.add('details');\n\t\t\tthis.newTr.classList.add(this.index % 2 ? 'odd' : 'even'); // eslint-disable-line no-magic-numbers\n\n\t\t\tvar newCell = document.createElement('td');\n\t\t\tnewCell.setAttribute('colspan', this.getRowColspan());\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.details.childNodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar childNode = _step.value;\n\n\t\t\t\t\tif ('SUMMARY' !== childNode.tagName) {\n\t\t\t\t\t\tnewCell.appendChild(childNode.cloneNode(true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.newTr.appendChild(newCell);\n\t\t}\n\n\t\t/**\n   * Gets the number of cells within the original row.\n   *\n   * @return {number} The number of cells.\n   */\n\n\t}, {\n\t\tkey: 'getRowColspan',\n\t\tvalue: function getRowColspan() {\n\t\t\treturn [].concat(_toConsumableArray(this.tr.childNodes)).filter(function (childNode) {\n\t\t\t\treturn ['TD', 'TH'].includes(childNode.tagName);\n\t\t\t}).length;\n\t\t}\n\n\t\t/**\n   * Toggles the additional row.\n   *\n   * @param {Object} target The click event target.\n   */\n\n\t}, {\n\t\tkey: 'toggle',\n\t\tvalue: function toggle(target) {\n\t\t\tif (this.tr.classList.contains('expanded')) {\n\t\t\t\tthis.onClose(target);\n\t\t\t} else {\n\t\t\t\tthis.onOpen(target);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Adds the additional row.\n   *\n   * @param {Object} target The click event target.\n   */\n\n\t}, {\n\t\tkey: 'onOpen',\n\t\tvalue: function onOpen(target) {\n\t\t\tthis.tr.parentNode.insertBefore(this.newTr, this.tr.nextSibling);\n\t\t\tthis.tr.classList.add('expanded');\n\n\t\t\tif ('SUMMARY' !== target.tagName) {\n\t\t\t\t// This browser will do this if the summary was clicked.\n\t\t\t\tthis.details.setAttribute('open', true);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the additional row.\n   *\n   * @param {Object} target The click event target.\n   */\n\n\t}, {\n\t\tkey: 'onClose',\n\t\tvalue: function onClose(target) {\n\t\t\tthis.tr.parentNode.removeChild(this.newTr);\n\t\t\tthis.tr.classList.remove('expanded');\n\n\t\t\tif ('SUMMARY' !== target.tagName) {\n\t\t\t\tthis.details.removeAttribute('open');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn RowToggler;\n}();\n\n/**\n * Sets up expandable details for errors when viewing a single URL error list.\n */\n\n\nvar ErrorRows = function () {\n\tfunction ErrorRows() {\n\t\t_classCallCheck(this, ErrorRows);\n\n\t\tthis.rows = [].concat(_toConsumableArray(document.querySelectorAll('.wp-list-table tr[id^=\"tag-\"]'))).map(function (tr, index) {\n\t\t\tvar rowHandler = new RowToggler(tr, index);\n\t\t\trowHandler.init();\n\t\t\treturn rowHandler;\n\t\t}).filter(function (row) {\n\t\t\treturn row.details;\n\t\t});\n\t}\n\n\t_createClass(ErrorRows, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tthis.addToggleAllListener();\n\t\t}\n\n\t\t/**\n   * Handle 'toggle all' buttons on the page.\n   */\n\n\t}, {\n\t\tkey: 'addToggleAllListener',\n\t\tvalue: function addToggleAllListener() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar open = false;\n\t\t\tvar toggleButtons = [].concat(_toConsumableArray(document.querySelectorAll('.column-details button.error-details-toggle')));\n\n\t\t\tvar onButtonClick = function onButtonClick(target) {\n\t\t\t\topen = !open;\n\t\t\t\t_this2.rows.forEach(function (row) {\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\trow.onOpen(target);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.onClose(target);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\twindow.addEventListener('click', function (event) {\n\t\t\t\tif (toggleButtons.includes(event.target)) {\n\t\t\t\t\tonButtonClick(event.target);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ErrorRows;\n}();\n\nwp.domReady(function () {\n\tnew ErrorRows().init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n")}});